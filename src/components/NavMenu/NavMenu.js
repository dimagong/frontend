import React, { useEffect, useState, useRef } from "react";
import { Pagination, PaginationLink, PaginationItem } from "reactstrap";
import { stopPropagation } from "utility/event-decorators";

import icon from "assets/img/icons/new-check.png";
import appsIcon from "assets/img/svg/apps.svg";
import surveyIcon from "assets/img/svg/survey.svg";

import { useOutsideClick, useOutsideFocus } from "hooks/use-outside-event";

import "./styles.scss";

const NavMenu = ({ tabs, onChange, active, tabId = "id", tabName }) => {
  const [shownMenu, setShownMenu] = useState("none");

  const navRef = useRef();

  const apps = React.useMemo(() => tabs.filter((tab) => tab.hasOwnProperty("d_form_id")), [tabs]);
  const surveys = React.useMemo(() => tabs.filter((tab) => !tab.hasOwnProperty("d_form_id")), [tabs]);

  const menus = React.useMemo(
    () => [
      {
        id: "surveys",
        title: "Surveys",
        className: "nav-menu-tabs__surveys",
        items: surveys,
        itemsCount: `${surveys.filter((survey) => survey.finished_at !== null).length}/${surveys.length}`,
      },
      {
        id: "apps",
        title: "Applications",
        className: "",
        items: apps,
        itemsCount: `${apps.filter((app) => app.icon !== "null").length}/${apps.length}`,
      },
    ],
    [apps, surveys]
  );

  const showMenu = React.useCallback(
    (menuName) => setShownMenu(menuName === shownMenu ? "none" : menuName),
    [shownMenu]
  );

  const closeMenu = React.useCallback(() => setShownMenu("none"), []);

  const handleTabChange = React.useCallback(
    (tab) => {
      if (tab[tabId] !== active) {
        closeMenu();
        onChange(tab);
      }
    },
    [active, closeMenu, onChange, tabId]
  );

  useOutsideClick(navRef, (e) => showMenu(shownMenu));
  useOutsideFocus(navRef, (e) => showMenu(shownMenu));

  const renderTabsWithIcons = (tabs) => {
    return tabs.map(
      (item) =>
        !item.isHidden && (
          <li key={item[tabId]} className="nav-menu-tabs_tab with-icon" id={item[tabId]}>
            <div className={`nav-menu-pagination-page_item ${item[tabId] === active ? "active" : ""}`}>
              <button className="btn nav-menu-pagination-page_link" onClick={() => handleTabChange(item)}>
                <div className={item.icon == "null" ? "icon-container icon-none" : "icon-container"}>
                  <img
                    src={item.icon == "null" ? "null" : icon}
                    alt=""
                    onError={(event) => (event.target.style.display = "none")}
                  />
                </div>
                <div className={"tabs-text-container"}>{tabName(item)}</div>
              </button>
            </div>
          </li>
        )
    );
  };

  //** TODO add mt-1 to other sections
  return (
    <div ref={navRef}>
      <div className="nav-column">
        <div
          className={`nav-column-item ${shownMenu === "apps" ? "active" : ""}`}
          onClick={stopPropagation(() => showMenu("apps"))}
        >
          <svg
            width="20"
            className={"nav-column-item__icon_fill"}
            height="28"
            viewBox="0 0 20 28"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4.54322 13.0093H5.62346V11.9074H4.54322V13.0093ZM4.54322 16.3148H5.62346V15.213H4.54322V16.3148ZM4.54322 9.70373H5.62346V8.60188H4.54322V9.70373ZM4.54322 19.6204H5.62346V18.5185H4.54322V19.6204ZM4.54322 22.926H5.62346V21.8241H4.54322V22.926ZM6.70371 16.3148H15.3457V15.213H6.70371V16.3148ZM6.70371 9.70373H15.3457V8.60188H6.70371V9.70373ZM15.2787 0.888916H0.222229V27.3334H19.6667V5.29632L15.2787 0.888916ZM17.5062 25.0613H2.38272V3.09262H13.1852V6.32986H17.5062V25.0613ZM6.70371 19.6204H15.3457V18.5185H6.70371V19.6204ZM6.70371 13.0093H15.3457V11.9074H6.70371V13.0093ZM6.70371 22.926H15.3457V21.8241H6.70371V22.926Z"
              fill="white"
            />
          </svg>
        </div>
        <div
          className={`nav-column-item ${shownMenu === "surveys" ? "active" : ""}`}
          onClick={stopPropagation(() => showMenu("surveys"))}
        >
          <svg
            width="23"
            height="28"
            className={"nav-column-item__icon_stroke"}
            viewBox="0 0 23 28"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clip-path="url(#clip0_1174_8)">
              <mask id="path-1-inside-1_1174_8" fill="white">
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M16.2595 14.8131C16.1104 14.6638 15.8679 14.6616 15.7166 14.8109C15.5653 14.9603 15.5653 15.2018 15.7144 15.3533L16.3707 16.0099L15.7144 16.6665C15.5653 16.8159 15.5675 17.0552 15.7188 17.2045C15.8701 17.3539 16.1126 17.3517 16.2595 17.2045L16.9113 16.5523L17.5654 17.2067C17.7145 17.3561 17.9592 17.3583 18.1083 17.2089C18.2596 17.0596 18.2596 16.8181 18.1105 16.6665L17.4542 16.0099L18.1105 15.3533C18.2596 15.204 18.2574 14.9647 18.1061 14.8153C17.9548 14.666 17.7123 14.6682 17.5654 14.8153L16.9136 15.4675L16.2595 14.8131ZM13.9323 1.21785V2.31584C13.9323 2.59912 14.1614 2.84507 14.4395 2.86484C14.4996 2.8846 14.5686 2.89338 14.6375 2.89338H16.7044V5.16622C13.2426 5.16622 9.77848 5.16622 6.31661 5.16622V2.89558H8.38127C8.45024 2.89558 8.52144 2.8868 8.57928 2.86703C8.85739 2.84727 9.08655 2.60132 9.08655 2.31804V1.22005C10.7018 1.21785 12.317 1.21785 13.9323 1.21785ZM16.9825 6.29495C17.2117 6.29495 17.4297 6.19613 17.5788 6.049C17.5988 6.02923 17.6077 6.00947 17.6277 5.98971C17.7479 5.84258 17.8257 5.65592 17.8257 5.46048V4.34273H20.9361C20.965 4.34273 21.0051 4.35151 21.0251 4.38225C21.0451 4.40421 21.0651 4.44374 21.0651 4.47229V25.8589C21.0651 25.8984 21.0562 25.927 21.0251 25.9467C21.0051 25.9665 20.9761 25.9862 20.9361 25.9862C14.553 25.9862 8.46582 25.9862 2.08273 25.9862C2.04268 25.9862 2.01376 25.9665 1.99374 25.9467C1.96481 25.927 1.95369 25.8984 1.95369 25.8589V4.47229C1.95369 4.44374 1.97371 4.40421 1.99374 4.38445C2.01376 4.3559 2.05381 4.34492 2.08273 4.34492H5.19307V5.46267C5.19307 5.65811 5.27316 5.84477 5.39108 5.9919C5.4111 6.01167 5.42 6.03143 5.44002 6.05119C5.58909 6.19832 5.80712 6.29714 6.03628 6.29714C9.68503 6.29495 13.3338 6.29495 16.9825 6.29495ZM20.9272 27.0952C21.2654 27.0952 21.5835 26.9591 21.8105 26.7329C22.0396 26.5067 22.1776 26.2036 22.1776 25.8611V4.47229C22.1776 4.12972 22.0396 3.82448 21.8105 3.60049C21.5813 3.3743 21.2743 3.23815 20.9272 3.23815H17.8169V2.62987C17.8169 2.40368 17.7279 2.19946 17.5677 2.04135C17.4186 1.89421 17.2095 1.7954 16.9714 1.7954H15.0447V1.03339C15.0447 0.77866 14.9357 0.552475 14.7666 0.385581C14.5975 0.218687 14.3706 0.111084 14.1125 0.111084C12.3771 0.111084 10.6439 0.111084 8.90856 0.111084C8.65048 0.111084 8.42132 0.218687 8.25223 0.385581C8.08314 0.552475 7.97413 0.77866 7.97413 1.03339V1.79759H6.04741C5.80935 1.79759 5.60021 1.89641 5.45115 2.04354C5.29318 2.19946 5.20197 2.40588 5.20197 2.63206V3.24035H2.09163C1.74455 3.24035 1.4353 3.3765 1.20836 3.60268C0.979206 3.82887 0.841265 4.13191 0.841265 4.47448V25.8611C0.841265 26.2036 0.979206 26.5089 1.20836 26.7329C1.43752 26.9591 1.75568 27.0952 2.09163 27.0952C8.46804 27.0952 14.5508 27.0952 20.9272 27.0952ZM5.18639 21.983C4.87936 21.983 4.62128 21.737 4.62128 21.4252C4.62128 21.1222 4.87046 20.8674 5.18639 20.8674C6.27879 20.8674 11.6162 20.8674 12.7086 20.8674C13.0268 20.8674 13.2737 21.1222 13.2737 21.4252C13.2737 21.7392 13.0156 21.983 12.7086 21.983C11.6162 21.983 6.27879 21.983 5.18639 21.983ZM5.18639 11.2666C4.87936 11.2666 4.62128 11.0207 4.62128 10.7089C4.62128 10.4058 4.87046 10.1511 5.18639 10.1511C6.27879 10.1511 11.6162 10.1511 12.7086 10.1511C13.0268 10.1511 13.2737 10.4058 13.2737 10.7089C13.2737 11.0229 13.0156 11.2666 12.7086 11.2666C11.6162 11.2666 6.27879 11.2666 5.18639 11.2666ZM5.18639 16.5523C4.87936 16.5523 4.62128 16.3064 4.62128 15.9946C4.62128 15.6915 4.87046 15.4368 5.18639 15.4368C6.27879 15.4368 11.6162 15.4368 12.7086 15.4368C13.0268 15.4368 13.2737 15.6915 13.2737 15.9946C13.2737 16.3086 13.0156 16.5523 12.7086 16.5523C11.6162 16.5523 6.27879 16.5523 5.18639 16.5523ZM18.0861 21.3967C18.2396 21.1705 18.1795 20.863 17.9481 20.7093C17.719 20.5578 17.4075 20.6171 17.2517 20.8455L16.9781 21.2451L15.8946 19.9429C15.7188 19.7321 15.4029 19.7014 15.1893 19.8748C14.9757 20.0483 14.9446 20.3602 15.1203 20.571L16.6199 22.3717C16.6533 22.4134 16.6933 22.4507 16.74 22.4837C16.9692 22.6352 17.2807 22.5759 17.4364 22.3475L18.0861 21.3967ZM18.0861 11.2359C18.2396 11.0097 18.1795 10.7023 17.9481 10.5485C17.719 10.397 17.4075 10.4563 17.2517 10.6847L16.9781 11.0844L15.8946 9.78215C15.7188 9.57134 15.4029 9.5406 15.1893 9.71408C14.9757 9.88756 14.9446 10.1994 15.1203 10.4102L16.6199 12.2109C16.6533 12.2526 16.6933 12.29 16.74 12.3229C16.9692 12.4744 17.2807 12.4151 17.4364 12.1867L18.0861 11.2359Z"
                />
              </mask>
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M16.2595 14.8131C16.1104 14.6638 15.8679 14.6616 15.7166 14.8109C15.5653 14.9603 15.5653 15.2018 15.7144 15.3533L16.3707 16.0099L15.7144 16.6665C15.5653 16.8159 15.5675 17.0552 15.7188 17.2045C15.8701 17.3539 16.1126 17.3517 16.2595 17.2045L16.9113 16.5523L17.5654 17.2067C17.7145 17.3561 17.9592 17.3583 18.1083 17.2089C18.2596 17.0596 18.2596 16.8181 18.1105 16.6665L17.4542 16.0099L18.1105 15.3533C18.2596 15.204 18.2574 14.9647 18.1061 14.8153C17.9548 14.666 17.7123 14.6682 17.5654 14.8153L16.9136 15.4675L16.2595 14.8131ZM13.9323 1.21785V2.31584C13.9323 2.59912 14.1614 2.84507 14.4395 2.86484C14.4996 2.8846 14.5686 2.89338 14.6375 2.89338H16.7044V5.16622C13.2426 5.16622 9.77848 5.16622 6.31661 5.16622V2.89558H8.38127C8.45024 2.89558 8.52144 2.8868 8.57928 2.86703C8.85739 2.84727 9.08655 2.60132 9.08655 2.31804V1.22005C10.7018 1.21785 12.317 1.21785 13.9323 1.21785ZM16.9825 6.29495C17.2117 6.29495 17.4297 6.19613 17.5788 6.049C17.5988 6.02923 17.6077 6.00947 17.6277 5.98971C17.7479 5.84258 17.8257 5.65592 17.8257 5.46048V4.34273H20.9361C20.965 4.34273 21.0051 4.35151 21.0251 4.38225C21.0451 4.40421 21.0651 4.44374 21.0651 4.47229V25.8589C21.0651 25.8984 21.0562 25.927 21.0251 25.9467C21.0051 25.9665 20.9761 25.9862 20.9361 25.9862C14.553 25.9862 8.46582 25.9862 2.08273 25.9862C2.04268 25.9862 2.01376 25.9665 1.99374 25.9467C1.96481 25.927 1.95369 25.8984 1.95369 25.8589V4.47229C1.95369 4.44374 1.97371 4.40421 1.99374 4.38445C2.01376 4.3559 2.05381 4.34492 2.08273 4.34492H5.19307V5.46267C5.19307 5.65811 5.27316 5.84477 5.39108 5.9919C5.4111 6.01167 5.42 6.03143 5.44002 6.05119C5.58909 6.19832 5.80712 6.29714 6.03628 6.29714C9.68503 6.29495 13.3338 6.29495 16.9825 6.29495ZM20.9272 27.0952C21.2654 27.0952 21.5835 26.9591 21.8105 26.7329C22.0396 26.5067 22.1776 26.2036 22.1776 25.8611V4.47229C22.1776 4.12972 22.0396 3.82448 21.8105 3.60049C21.5813 3.3743 21.2743 3.23815 20.9272 3.23815H17.8169V2.62987C17.8169 2.40368 17.7279 2.19946 17.5677 2.04135C17.4186 1.89421 17.2095 1.7954 16.9714 1.7954H15.0447V1.03339C15.0447 0.77866 14.9357 0.552475 14.7666 0.385581C14.5975 0.218687 14.3706 0.111084 14.1125 0.111084C12.3771 0.111084 10.6439 0.111084 8.90856 0.111084C8.65048 0.111084 8.42132 0.218687 8.25223 0.385581C8.08314 0.552475 7.97413 0.77866 7.97413 1.03339V1.79759H6.04741C5.80935 1.79759 5.60021 1.89641 5.45115 2.04354C5.29318 2.19946 5.20197 2.40588 5.20197 2.63206V3.24035H2.09163C1.74455 3.24035 1.4353 3.3765 1.20836 3.60268C0.979206 3.82887 0.841265 4.13191 0.841265 4.47448V25.8611C0.841265 26.2036 0.979206 26.5089 1.20836 26.7329C1.43752 26.9591 1.75568 27.0952 2.09163 27.0952C8.46804 27.0952 14.5508 27.0952 20.9272 27.0952ZM5.18639 21.983C4.87936 21.983 4.62128 21.737 4.62128 21.4252C4.62128 21.1222 4.87046 20.8674 5.18639 20.8674C6.27879 20.8674 11.6162 20.8674 12.7086 20.8674C13.0268 20.8674 13.2737 21.1222 13.2737 21.4252C13.2737 21.7392 13.0156 21.983 12.7086 21.983C11.6162 21.983 6.27879 21.983 5.18639 21.983ZM5.18639 11.2666C4.87936 11.2666 4.62128 11.0207 4.62128 10.7089C4.62128 10.4058 4.87046 10.1511 5.18639 10.1511C6.27879 10.1511 11.6162 10.1511 12.7086 10.1511C13.0268 10.1511 13.2737 10.4058 13.2737 10.7089C13.2737 11.0229 13.0156 11.2666 12.7086 11.2666C11.6162 11.2666 6.27879 11.2666 5.18639 11.2666ZM5.18639 16.5523C4.87936 16.5523 4.62128 16.3064 4.62128 15.9946C4.62128 15.6915 4.87046 15.4368 5.18639 15.4368C6.27879 15.4368 11.6162 15.4368 12.7086 15.4368C13.0268 15.4368 13.2737 15.6915 13.2737 15.9946C13.2737 16.3086 13.0156 16.5523 12.7086 16.5523C11.6162 16.5523 6.27879 16.5523 5.18639 16.5523ZM18.0861 21.3967C18.2396 21.1705 18.1795 20.863 17.9481 20.7093C17.719 20.5578 17.4075 20.6171 17.2517 20.8455L16.9781 21.2451L15.8946 19.9429C15.7188 19.7321 15.4029 19.7014 15.1893 19.8748C14.9757 20.0483 14.9446 20.3602 15.1203 20.571L16.6199 22.3717C16.6533 22.4134 16.6933 22.4507 16.74 22.4837C16.9692 22.6352 17.2807 22.5759 17.4364 22.3475L18.0861 21.3967ZM18.0861 11.2359C18.2396 11.0097 18.1795 10.7023 17.9481 10.5485C17.719 10.397 17.4075 10.4563 17.2517 10.6847L16.9781 11.0844L15.8946 9.78215C15.7188 9.57134 15.4029 9.5406 15.1893 9.71408C14.9757 9.88756 14.9446 10.1994 15.1203 10.4102L16.6199 12.2109C16.6533 12.2526 16.6933 12.29 16.74 12.3229C16.9692 12.4744 17.2807 12.4151 17.4364 12.1867L18.0861 11.2359Z"
                strokeWidth="10"
                mask="url(#path-1-inside-1_1174_8)"
              />
            </g>
            <defs>
              <clipPath id="clip0_1174_8">
                <rect width="21.3363" height="26.9841" fill="white" transform="matrix(-1 0 0 1 22.1776 0.111084)" />
              </clipPath>
            </defs>
          </svg>
        </div>
      </div>
      {menus
        .filter((menu) => menu.id === shownMenu)
        .map((menu) => (
          <nav className={`nav-menu-tabs ${menu.className || ""}`}>
            <ul className="nav-menu-pagination">
              <li className="title">
                {menu.title}
                <span className={"title-number"}> {menu.itemsCount}</span>
              </li>
              <ul className="nav-menu-tabs_tabs" id={"tabs-container"}>
                {menu.items.length !== 0 ? (
                  renderTabsWithIcons(menu.items)
                ) : (
                  <span className="nav-menu-tab_not-assigned">
                    {`There are no assigned ${menu.title.toLocaleLowerCase()}`}
                  </span>
                )}
              </ul>
            </ul>
          </nav>
        ))}
    </div>
  );
};

export default NavMenu;
